//creates a node in firebase which holds list of medical records
       this.medicalrecordRef$ = this.afdb.list(`medicalRecords/${this.medicalRecord.patientId}/${this.MEDICALRECORDTYPE.bloodSugar}/${this.selectedTestType}`);

      //adds medical record to list of records in firebase database
      this.medicalrecordRef$.push({
        value:this.convertConcentrationValue(),
        date:this.medicalRecord.date,
        time:this.medicalRecord.time,
        testType:this.selectedTestType,
        comments:this.medicalRecord.comments,
        patientId:this.medicalRecord.patientId,
      }).then(()=>{
        toast.setMessage('New entry has been added successfully');
        toast.setDuration(2000);
        toast.setPosition('top');
        toast.present();
      }).catch((error)=> {
        alert.setMessage(error.message);
      })


















      this.addedRecords.forEach((element) => {

        //adds medical record to list of records in firebase database
        this.getMedicalRecordsRef(element.testType).push({
          value:element.value,
          date:element.date,
          time:element.time,
          testType:element.testType,
          comments:element.comments,
          patientId:element.patientId,
        }).then(()=>{
          savedToAfdb = true;
        }).catch((error)=> {
          alert.setMessage(error.message);
        })

      });


       
       import { AngularFireAuth } from 'angularfire2/auth';
import { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';
import { Component } from '@angular/core';
import { IonicPage, NavController, NavParams, ViewController, LoadingController } from 'ionic-angular';
import { MedicalRecord } from '../../../models/MedicalRecord';
import * as moment from 'moment';

/**
 * Generated class for the BloodSugarChartPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@IonicPage()
@Component({
  selector: 'page-blood-sugar-chart',
  templateUrl: 'blood-sugar-chart.html',
  styles: [`
    chart {
        display: block;
        width: auto;
    }
`]
})
export class BloodSugarChartPage {

  bsFastingChartOptions : any;

  bsNonFastingChartOptions: any;

  currentUserId:any;

  bloodSugarRecordsRef$ : FirebaseListObservable<MedicalRecord[]>;

  bloodSugarRecords = [];

  bloodSugarType = {
    bsFasting:'Blood Sugar/fasting',
    bsNonFasting:'Blood Sugar/non fasting',
}

  constructor(
    public navCtrl: NavController, 
    public navParams: NavParams, 
    public viewCtlr: ViewController,
    private loadingCtlr: LoadingController,
    private afdb: AngularFireDatabase,
    private afAuth:AngularFireAuth,) {
  }

  ionViewDidLoad() {
    this.showMedicalRecordsChart();
  }

  showMedicalRecordsChart() {
    let loading = this.loadingFunc();
    loading.setContent('Loading...');
    loading.setSpinner('ios');
    loading.present();

    //gets id of current user
    this.afAuth.authState.subscribe((auth) => {
        this.currentUserId = auth.uid;

        this.bloodSugarRecordsRef$ =  this.afdb.list(`medicalRecords/${this.currentUserId}/${this.bloodSugarType.bsFasting}`);
        this.bloodSugarRecordsRef$.subscribe((data)=> {
            this.bloodSugarRecords = [];
            data.forEach((item)=> {
                this.bloodSugarRecords.push(item);
            });
            loading.dismiss();
            this.medicalRecordsChart();
        });
    });
}

  medicalRecordsChart() {
        
    //populates the data property of the chart with data from firebase
    let data = [];
    this.bloodSugarRecords.forEach((item) => {
        data.push(
            [moment(item.date).valueOf(), item.value]
        )
    });

    

    this.bsFastingChartOptions =  {
        chart: {
            type: 'spline',
            backgroundColor: '#ccc',
        },
        title: {
            text: 'Medical Records'
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: {
                hour: '%A, %b %e, %H:%M',
            },
        },
        yAxis: {
            title: {
                text: 'Values'
            },
            min: 0
        },
        tooltip: {
            headerFormat: '<b>{series.name}</b><br>',
            pointFormat: '{point.x:%e. %b}: {point.y:.2f} m'
        },

        plotOptions: {
            spline: {
                marker: {
                    enabled: true
                }
            }
        },

        colors: ['#6CF', '#39F', '#06C', '#036', '#000'],

        // Define the data points. All series have a dummy year
        // of 1970/71 in order to be compared on the same x axis. Note
        // that in JavaScript, months start at 0 for January, 1 for February etc.
        series: [{
            name: "Blood Sugar Level",
            data: data,
            zones: [{
                value: 50,
                color: 'black'
            },{
                value: 125,
                color: 'green'
            }, {
                value: 200,
                color: 'yellow'
            },{
                color: 'red'
            }]
        }]
    };

    this.bsFastingChartOptions.series[0].name = this.bloodSugarType.bsFasting;
}

loadingFunc(){
  return this.loadingCtlr.create();
}


  //close the modal 
  closeModal() {
    this.viewCtlr.dismiss(); 
  }

}
